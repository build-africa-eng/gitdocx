name: 🚀 GitDocx Linux CI Build & Publish

on:
  push:
    branches: [main]
    tags:
      - 'v*.*.*'  # e.g. v1.0.0

jobs:
  build:
    name: 🔨 Build and Push GitDocx Linux Image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    strategy:
      matrix:
        include:
          - platform: linux/amd64
            suffix: amd64
          - platform: linux/arm64
            suffix: arm64

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🐳 Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: 🐳 Set up Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver: docker-container
          use: true

      - name: 🔐 DockerHub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🔐 GitHub Container Registry Login (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🧪 Test Build (no push on branches)
        if: github.ref_type != 'tag'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.linux
          platforms: ${{ matrix.platform }}
          outputs: type=docker
          tags: africanfuture/gitdocx:dev-${{ matrix.suffix }}

      - name: 🚀 Build & Push Tagged Release
        if: github.ref_type == 'tag'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.linux
          platforms: ${{ matrix.platform }}
          push: true
          tags: |
            africanfuture/gitdocx:${{ github.ref_name }}-${{ matrix.suffix }}
            africanfuture/gitdocx:latest
            ghcr.io/africanfuture/gitdocx:${{ github.ref_name }}-${{ matrix.suffix }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: ✅ Slack Notification on Success
        if: success() && github.ref_type == 'tag'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: good
          SLACK_MESSAGE: "✅ GitDocx `${{ github.ref_name }}` built and pushed successfully."
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

      - name: 🚨 Discord Notification on Failure
        if: failure()
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{"content":"🚨 GitDocx build failed on `${{ github.ref }}`"}' \
               ${{ secrets.DISCORD_WEBHOOK }}